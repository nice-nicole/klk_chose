[{"/home/nice/Documents/Ell/contact_rest_api/front_end/src/index.js":"1","/home/nice/Documents/Ell/contact_rest_api/front_end/src/components/ContactForm.jsx":"2","/home/nice/Documents/Ell/contact_rest_api/front_end/src/reportWebVitals.js":"3","/home/nice/Documents/Ell/contact_rest_api/front_end/src/components/SingleContact.jsx":"4","/home/nice/Documents/Ell/contact_rest_api/front_end/src/components/Contacts.jsx":"5","/home/nice/Documents/Ell/contact_rest_api/front_end/src/App.js":"6","/home/nice/Documents/Ell/contact_rest_api/front_end/src/components/ContactDetails.jsx":"7","/home/nice/Documents/Ell/contact_rest_api/front_end/src/portal.jsx":"8","/home/nice/Documents/Ell/contact_rest_api/front_end/src/components/Layout.jsx":"9","/home/nice/Documents/Ell/contact_rest_api/front_end/src/components/Header.jsx":"10","/home/nice/Documents/Ell/contact_rest_api/front_end/src/components/Form.jsx":"11"},{"size":500,"mtime":1609761964034,"results":"12","hashOfConfig":"13"},{"size":3200,"mtime":1610109617240,"results":"14","hashOfConfig":"13"},{"size":362,"mtime":1609761964038,"results":"15","hashOfConfig":"13"},{"size":2225,"mtime":1610110519689,"results":"16","hashOfConfig":"13"},{"size":417,"mtime":1610101808718,"results":"17","hashOfConfig":"13"},{"size":1957,"mtime":1610109978451,"results":"18","hashOfConfig":"13"},{"size":2884,"mtime":1610012584641,"results":"19","hashOfConfig":"13"},{"size":645,"mtime":1609963279457,"results":"20","hashOfConfig":"13"},{"size":529,"mtime":1610103193229,"results":"21","hashOfConfig":"13"},{"size":561,"mtime":1610108149056,"results":"22","hashOfConfig":"13"},{"size":1392,"mtime":1610108946773,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"lsuz7o",{"filePath":"27","messages":"28","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"30"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"33"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/nice/Documents/Ell/contact_rest_api/front_end/src/index.js",[],["52","53"],"/home/nice/Documents/Ell/contact_rest_api/front_end/src/components/ContactForm.jsx",["54","55","56","57","58"],"import { Box } from \"@chakra-ui/react\";\nimport React, { useState, useEffect } from \"react\";\nimport { useHistory, Link } from \"react-router-dom\";\nimport Form from \"./Form\";\n\nconst ContactForm = ({ contactList, setcontactList, addContact }) => {\n  const [contact, setContact] = useState({ name: \"\", phone: \"\", email: \"\" });\n  const history = useHistory();\n\n  const urlParams = new URLSearchParams(window.location.search);\n  const id = urlParams.get(\"id\");\n  console.log(\"id\", id);\n\n  // const handleChange = (e) => {\n  //   const { name, value } = e.target;\n  //   setContact((contact) => ({ ...contact, [name]: value }));\n  // };\n\n  // const handleSubmit = (e) => {\n  //   e.preventDefault();\n  //   if (id) {\n  //     fetch(`http://localhost:3000/contacts/${id}`, {\n  //       method: \"PUT\",\n  //       body: JSON.stringify(contact),\n  //       headers: {\n  //         accept: \"application/json, text/plain\",\n  //         \"content-Type\": \"application/json\",\n  //       },\n  //     })\n  //       .then((response) => response.json())\n  //       .then((data) => {\n  //         console.log(data);\n  //         history.push(\"/\");\n  //       });\n  //   } else {\n  //     fetch(\"http://localhost:3000/contacts\", {\n  //       method: \"POST\",\n  //       body: JSON.stringify(contact),\n  //       headers: {\n  //         accept: \"application/json, text/plain\",\n  //         \"content-Type\": \"application/json\",\n  //       },\n  //     })\n  //       .then((response) => response.json())\n  //       .then((data) => {\n  //         console.log(data);\n  //         history.push(\"/\");\n  //       });\n  //   }\n  // };\n  // const getOne = () => {\n  //   fetch(`http://localhost:3000/contacts/${id}`)\n  //     .then((response) => response.json())\n  //     .then((data) => {\n  //       console.log(data);\n  //       setContact({ ...data });\n  //       console.log(\"infoo\", contact);\n  //     });\n  // };\n\n  // useEffect(() => {\n  //   if (id) {\n  //     getOne();\n  //   }\n  // }, [getOne, id]);\n\n  return (\n    <Box>\n      <Form />\n    </Box>\n    // <div className=\"contactForm\">\n    //   <Form primary>\n    //     <div className=\"buttons\">\n    //       <Button className=\"btn_submit\" onClick={handleSubmit}>\n    //         Save\n    //       </Button>\n    //       <Link to=\"/\">\n    //         <Button className=\"btn_cancel\">Cancel</Button>\n    //       </Link>\n    //     </div>\n    //     <div className=\"inputs\">\n    //       <Form.Input\n    //         type=\"text\"\n    //         className=\"input\"\n    //         placeholder=\"name\"\n    //         value={contact.name}\n    //         name=\"name\"\n    //         onChange={handleChange}\n    //       />\n\n    //       <Form.Input\n    //         type=\"text\"\n    //         className=\"input\"\n    //         placeholder=\"phone\"\n    //         value={contact.phone}\n    //         name=\"phone\"\n    //         onChange={handleChange}\n    //       />\n\n    //       <Form.Input\n    //         type=\"text\"\n    //         className=\"input\"\n    //         placeholder=\"email\"\n    //         value={contact.email}\n    //         name=\"email\"\n    //         onChange={handleChange}\n    //       />\n    //     </div>\n    //   </Form>\n    // </div>\n  );\n};\n\nexport default ContactForm;\n",["59","60"],"/home/nice/Documents/Ell/contact_rest_api/front_end/src/reportWebVitals.js",[],["61","62"],"/home/nice/Documents/Ell/contact_rest_api/front_end/src/components/SingleContact.jsx",[],"/home/nice/Documents/Ell/contact_rest_api/front_end/src/components/Contacts.jsx",[],["63","64"],"/home/nice/Documents/Ell/contact_rest_api/front_end/src/App.js",[],"/home/nice/Documents/Ell/contact_rest_api/front_end/src/components/ContactDetails.jsx",["65"],"import React, { useState, useEffect } from \"react\";\nimport { Image, Modal, Header } from \"semantic-ui-react\";\nimport user_photo from \"../images/photo.png\";\nimport { useHistory, Link } from \"react-router-dom\";\nimport portal from \"../portal\";\nimport \"../App.css\";\n\nconst ContactDetails = ({ singleContact }) => {\n  const [open, setOpen] = useState(true);\n  const [info, setInfo] = useState({ name: \"\", phone: \"\", email: \"\" });\n  const [openPortal, setOpenPortal] = useState(true);\n  const [message, setMessage] = useState({\n    message: \"helloo i need aka popup\",\n  });\n\n  const urlParams = new URLSearchParams(window.location.search);\n  const id = urlParams.get(\"id\");\n  console.log(\"id\", id);\n\n  const history = useHistory();\n\n  const getOne = () => {\n    fetch(`http://localhost:3000/contacts/${id}`)\n      .then((response) => response.json())\n      .then((data) => {\n        console.log(data);\n        setInfo({ ...data });\n        console.log(\"infoo\", info);\n      });\n  };\n  useEffect(() => {\n    getOne();\n  }, []);\n\n  const deleteContact = () => {\n    fetch(`http://localhost:3000/contacts/${id}`, {\n      method: \"DELETE\",\n      body: JSON.stringify(info),\n      headers: {\n        accept: \"application/json, text/plain\",\n        \"content-Type\": \"application/json\",\n      },\n    })\n      .then((response) => response.json())\n      .then((data) => {\n        console.log(data);\n        setOpenPortal(true);\n        setMessage({ ...data });\n        setInfo({ ...data });\n        console.log(\"infoo\", info);\n        history.push(\"/\");\n      });\n  };\n\n  return (\n    <div>\n      <Modal\n        onClose={() => setOpen(false)}\n        onOpen={() => setOpen(true)}\n        open={open}\n        className=\"Modal\"\n      >\n        <Modal.Header>\n          <h2>Contact Details</h2>\n        </Modal.Header>\n        <Modal.Content image>\n          <Image size=\"medium\" src={user_photo} wrapped />\n          <Modal.Description>\n            <Header>names: {info.name}</Header>\n            <p>phone: {info.phone}.</p>\n            <p>email adress: {info.email}</p>\n          </Modal.Description>\n        </Modal.Content>\n        {/* <Modal.Actions> */}\n        <div className=\"Actions\">\n          <button color=\"red\" onClick={deleteContact} className=\"delete_btn\">\n            Delete\n          </button>\n          <button\n            className=\"update_btn\"\n            onClick={() => {\n              history.push(`/new-contact?id=${id}`);\n            }}\n          >\n            Edit\n          </button>\n          {/* </Modal.Actions> */}\n        </div>\n        <Link to=\"/\">\n          <p className=\"go_to_contacts\">return to list of contacts</p>\n        </Link>\n      </Modal>\n      {message && (\n        <portal\n          open={openPortal}\n          handleClose={() => setOpenPortal(false)}\n          text={message.message}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default ContactDetails;\n","/home/nice/Documents/Ell/contact_rest_api/front_end/src/portal.jsx",[],"/home/nice/Documents/Ell/contact_rest_api/front_end/src/components/Layout.jsx",[],"/home/nice/Documents/Ell/contact_rest_api/front_end/src/components/Header.jsx",[],"/home/nice/Documents/Ell/contact_rest_api/front_end/src/components/Form.jsx",[],{"ruleId":"66","replacedBy":"67"},{"ruleId":"68","replacedBy":"69"},{"ruleId":"70","severity":1,"message":"71","line":2,"column":27,"nodeType":"72","messageId":"73","endLine":2,"endColumn":36},{"ruleId":"70","severity":1,"message":"74","line":3,"column":22,"nodeType":"72","messageId":"73","endLine":3,"endColumn":26},{"ruleId":"70","severity":1,"message":"75","line":7,"column":10,"nodeType":"72","messageId":"73","endLine":7,"endColumn":17},{"ruleId":"70","severity":1,"message":"76","line":7,"column":19,"nodeType":"72","messageId":"73","endLine":7,"endColumn":29},{"ruleId":"70","severity":1,"message":"77","line":8,"column":9,"nodeType":"72","messageId":"73","endLine":8,"endColumn":16},{"ruleId":"66","replacedBy":"78"},{"ruleId":"68","replacedBy":"79"},{"ruleId":"66","replacedBy":"80"},{"ruleId":"68","replacedBy":"81"},{"ruleId":"66","replacedBy":"82"},{"ruleId":"68","replacedBy":"83"},{"ruleId":"84","severity":1,"message":"85","line":33,"column":6,"nodeType":"86","endLine":33,"endColumn":8,"suggestions":"87"},"no-native-reassign",["88"],"no-negated-in-lhs",["89"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'Link' is defined but never used.","'contact' is assigned a value but never used.","'setContact' is assigned a value but never used.","'history' is assigned a value but never used.",["88"],["89"],["88"],["89"],["88"],["89"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getOne'. Either include it or remove the dependency array.","ArrayExpression",["90"],"no-global-assign","no-unsafe-negation",{"desc":"91","fix":"92"},"Update the dependencies array to be: [getOne]",{"range":"93","text":"94"},[1016,1018],"[getOne]"]